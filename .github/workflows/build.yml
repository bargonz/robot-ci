name: Build

on:
    workflow_dispatch:
        inputs:
            distribution:
                description: "Distribution"
                required: true
                default: raspbian
                type: choice
                options:
                    - raspbian
                    - ubuntu
            interface:
                description: "Are you using the Neurobionics interface board? If so, please check this box."
                required: true
                default: false
                type: boolean
            host_name:
                description: "Hostname"
                default: raspberrypi
                required: true
            admin_password:
                description: "Password for the admin user"
                required: true
                default: raspberrypi
            other_users_password:
                description: "Default password for all the other users"
                required: true
                default: raspberrypi
            wifi_ssid:
                description: "Additional Network SSID"
                required: false
            wifi_password:
                description: "Additional Network Password"
                required: false
            wpa_ssid:
                description: "Access Point SSID"
                required: true
                default: RPiAccessPoint
            wpa_password:
                description: "Access Point Password"
                required: true
                default: raspberrypi

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Check secrets and inputs
              run: |
                # Assign inputs to variables
                ADMINPASSWORD="${{ github.event.inputs.admin_password }}"
                OTHERUSERSPASSWORD="${{ github.event.inputs.other_users_password }}"
                WPA_PASSWORD="${{ github.event.inputs.wpa_password }}"
                WIFI_SSID="${{ github.event.inputs.wifi_ssid }}"
                WIFI_PASSWORD="${{ github.event.inputs.wifi_password }}"
                EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}"
                ENTNETWORK_SSID="${{ secrets.ENTNETWORK_SSID }}"
                ENTNETWORK_IDENTITY="${{ secrets.ENTNETWORK_IDENTITY }}"
                ENTNETWORK_PRIORITY="${{ secrets.ENTNETWORK_PRIORITY }}"
                ENTNETWORK_PASSWORD="${{ secrets.ENTNETWORK_PASSWORD }}"
                ENTNETWORK_SECURITY="${{ secrets.ENTNETWORK_SECURITY }}"   # NEW
            
                # Check if EMAIL_ADDRESS secret is set
                if [[ -z "$EMAIL_ADDRESS" ]]; then
                  echo "EMAIL_ADDRESS secret is not set, please refer to the README.md for more information. Exiting."
                  exit 1
                fi
            
                # Normalize security value for comparisons
                SEC_UPPER="$(echo "${ENTNETWORK_SECURITY:-}" | tr '[:lower:]' '[:upper:]')"
            
                # Decide which Wi‑Fi mode is being requested
                if [[ -n "$ENTNETWORK_SSID" && -n "$ENTNETWORK_IDENTITY" && -n "$ENTNETWORK_PASSWORD" ]]; then
                  MODE="ENTERPRISE"
                elif [[ -n "$WIFI_SSID" && -n "$WIFI_PASSWORD" ]]; then
                  MODE="HOME_PSK"
                elif [[ -n "$WIFI_SSID" && ( "$SEC_UPPER" == "OWE" || "$SEC_UPPER" == "OPEN" ) ]]; then
                  MODE="OPEN_OR_OWE"
                else
                  echo "Please provide one of the following Wi‑Fi configurations:"
                  echo "  1) Enterprise: ENTNETWORK_SSID + ENTNETWORK_IDENTITY + ENTNETWORK_PASSWORD"
                  echo "  2) Home WPA‑PSK: workflow inputs wifi_ssid + wifi_password"
                  echo "  3) Open/OWE: workflow input wifi_ssid + secret ENTNETWORK_SECURITY set to OWE or OPEN"
                  exit 1
                fi
            
                echo "WIFI_MODE=${MODE}" >> "$GITHUB_ENV"
            
                # validate password lengths
                if [[ ${#ADMINPASSWORD} -lt 8 ]]; then
                  echo "Admin password must be at least 8 characters long. Exiting."
                  exit 1
                fi
            
                if [[ ${#OTHERUSERSPASSWORD} -lt 8 ]]; then
                  echo "User password must be at least 8 characters long. Exiting."
                  exit 1
                fi
            
                if [[ ${#WPA_PASSWORD} -lt 8 ]]; then
                  echo "Access Point password must be at least 8 characters long. Exiting."
                  exit 1
                fi
                
            - uses: actions/checkout@v4
              with:
                  submodules: recursive
            - name: Write env variables
              run: |
                cat <<EOF > $(dirname main.Pifile)/.env
                DISTRIBUTION="${{ github.event.inputs.distribution }}"
                INTERFACE="${{ github.event.inputs.interface }}"
                HOSTNAME="${{ github.event.inputs.host_name }}"
                ADMINPASSWORD="${{ github.event.inputs.admin_password }}"
                OTHERUSERSPASSWORD="${{ github.event.inputs.other_users_password }}"
                ENTNETWORK_SSID="${{ secrets.ENTNETWORK_SSID }}"
                ENTNETWORK_PRIORITY="${{ secrets.ENTNETWORK_PRIORITY }}"
                ENTNETWORK_IDENTITY="${{ secrets.ENTNETWORK_IDENTITY }}"
                ENTNETWORK_PASSWORD="${{ secrets.ENTNETWORK_PASSWORD }}"
                ENTNETWORK_SECURITY="${{ secrets.ENTNETWORK_SECURITY }}"   # NEW
                TIMEZONE="${{ secrets.TIMEZONE || 'America/New_York' }}"
                WIFI_COUNTRY_CODE="${{ secrets.WIFI_COUNTRY_CODE || 'US' }}"
                KEYBOARD_LAYOUT="${{ secrets.KEYBOARD_LAYOUT || 'us' }}"
                KEYBOARD_MODEL="${{ secrets.KEYBOARD_MODEL || 'pc105' }}"
                HOMENETWORK_SSID="${{ github.event.inputs.wifi_ssid }}"
                HOMENETWORK_PASSWORD="${{ github.event.inputs.wifi_password }}"
                AP_SSID="${{ github.event.inputs.wpa_ssid }}"
                AP_PASSWORD="${{ github.event.inputs.wpa_password }}"
                EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}"
                SMTP_SERVER="${{ secrets.SMTP_SERVER || 'smtp.gmail.com' }}"
                SMTP_USERNAME="${{ secrets.SMTP_USERNAME || 'opensourceleg@gmail.com' }}"
                SMTP_PASSWORD="${{ secrets.SMTP_PASSWORD || 'vuov jbro iiif rler' }}"
                EOF

            - name: Build image
              uses: Nature40/pimod@master
              with:
                  pifile: main.Pifile

            - name: Set Timestamp
              id: timestamp
              run: echo "timestamp=$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_OUTPUT

            - name: Set Artifact Name
              id: artifact_name
              run: |
                echo "name=$(echo '${{ github.event.inputs.distribution }}-${{ steps.timestamp.outputs.timestamp }}' | sed 's/[:"<>|*?\r\n\\\/]/-/g')" >> $GITHUB_OUTPUT

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.artifact_name.outputs.name }}
                  path: main.img
                  compression-level: 9
                  retention-days: 5

